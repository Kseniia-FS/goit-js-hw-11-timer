{"version":3,"sources":["js/plagin.js","js/timer.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","Date","days","document","querySelector","hours","minutes","seconds","pad","value","countDowm","currentTime","createValueForSpan","showTime","setInterval","time","textContent","Math","floor","timer"],"mappings":";;;AACqB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAArB,MAAMA,EACJC,aAAY,SACVC,EADU,WAEVC,IAEKA,KAAAA,WAAa,IAAIC,KAAKD,GACtBE,KAAAA,KAAOC,SAASC,iBAAiBL,+BACjCM,KAAAA,MAAQF,SAASC,iBAAiBL,gCAClCO,KAAAA,QAAUH,SAASC,iBAAiBL,+BACpCQ,KAAAA,QAAUJ,SAASC,iBAAiBL,+BAI3CS,IAAIC,GACKA,OAAAA,EAAQ,OAASA,IAAUA,EAGpCC,YACQC,MAAAA,EAAc,IAAIV,KACnBW,KAAAA,mBAAmBD,GAG1BE,WACEC,YAAY,IAAM,KAAKJ,YAAa,KAGtCE,mBAAmBD,GACXI,MAAAA,EAAO,KAAKf,WAAaW,EAC1BT,KAAAA,KAAKc,YAAc,KAAKR,IAAIS,KAAKC,MAAMH,EAAQ,QAC/CV,KAAAA,MAAMW,YAAc,KAAKR,IAAIS,KAAKC,MAAOH,EAAQ,MAAyB,OAC1ET,KAAAA,QAAQU,YAAc,KAAKR,IAAIS,KAAKC,MAAOH,EAAQ,KAAoB,MACvER,KAAAA,QAAQS,YAAc,KAAKR,IAAIS,KAAKC,MAAOH,EAAQ,IAAc,OA/BrD,QAAA,QAAA;;ACSnB,aAVF,IAAA,EAAA,EAAA,QAAA,gBAUE,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GANF,MAAMI,EAAQ,IAAItB,EAAJ,QAAmB,CAC/BE,SAAU,WACVC,WAAY,eAIZmB,EAAMN;;ACRR,aAFA,QAAA,oBAEA,QAAA","file":"src.5bbdd3ae.js","sourceRoot":"../src","sourcesContent":["export default\nclass CountdownTimer {\n  constructor({\n    selector,\n    targetDate\n  }) {\n    this.targetDate = new Date(targetDate);\n    this.days = document.querySelector(`${selector} .value[data-value=\"days\"]`);\n    this.hours = document.querySelector(`${selector} .value[data-value=\"hours\"]`);\n    this.minutes = document.querySelector(`${selector} .value[data-value=\"mins\"]`);\n    this.seconds = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\n\n  }\n  \n  pad(value) {\n    return value < 10 ? `0${value}` : value;\n  }\n\n  countDowm() {\n    const currentTime = new Date();\n    this.createValueForSpan(currentTime);\n  }\n\n  showTime() {\n    setInterval(() => this.countDowm(), 1000);\n  }\n\n  createValueForSpan(currentTime) {\n    const time = this.targetDate - currentTime;\n    this.days.textContent = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    this.hours.textContent = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    this.minutes.textContent = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    this.seconds.textContent = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  }\n}","import\nCountdownTimer\nfrom \"./plagin.js\";\n\nconst timer = new CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: \"2021,07,17\",\n});\n\n\n  timer.showTime();\n","import './sass/main.scss';\n\nimport './js/timer.js';\n\n\n"]}